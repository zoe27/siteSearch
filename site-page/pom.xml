<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>cn.com.ruoyixi</groupId>
		<artifactId>siteFrontEnd</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>site-page</artifactId>

	<dependencies>
		<!-- thymeleaf -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>cn.com.ruoyixi</groupId>
			<artifactId>site-es-v1</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.collections/google-collections -->
		<dependency>
			<groupId>com.google.collections</groupId>
			<artifactId>google-collections</artifactId>
			<version>1.0-rc2</version>
		</dependency>

		<!-- 逆向工程 -->
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<version>1.3.2</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.6</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- 使用spring-boot带的打包方式，注意下面的配置 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<fork>true</fork>
					<mainClass>cn.com.site.page.App</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- 将所有依赖打包到一起 -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					get all project dependencies
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					MainClass in mainfest make a executable jar
					<archive>
						<manifest>
							<mainClass>cn.com.site.page.App</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						bind to the packaging phase
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->


			<!-- 指定主函数 -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jar-plugin</artifactId> 
				<configuration> <archive> <manifest> <mainClass>cn.com.site.page.App</mainClass> 
				<addClasspath>true</addClasspath> <classpathPrefix>lib/</classpathPrefix> 
				</manifest> </archive> <classesDirectory> </classesDirectory> </configuration> 
				</plugin> -->
		</plugins>

		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<!-- 是否替换资源中的属性-->
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>static/salary/**/*</include>
					<include>static/img/company/*</include>
					<include>static/js/jquery-3.3.1.min.js</include>
					<include>templates/salary/*</include>
					<include>*.properties</include>
					<include>*.xml</include>
					<include>Dockerfile</include>
					<include>salary/*.json</include>
					<include>h5/**/*</include>
				</includes>
				<excludes>
<!--					<exclude>**/*.json</exclude>-->
				</excludes>
				<!-- 是否替换资源中的属性-->
				<filtering>false</filtering>
			</resource>
		</resources>
	</build>
</project>